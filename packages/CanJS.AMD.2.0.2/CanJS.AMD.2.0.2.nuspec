<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>CanJS.AMD</id>
    <version>2.0.2</version>
    <title>CanJS using RequireJS AMD Modules</title>
    <authors>Bitovi</authors>
    <owners>Bitovi</owners>
    <licenseUrl>https://github.com/bitovi/canjs/blob/master/license.md</licenseUrl>
    <projectUrl>http://canjs.com/</projectUrl>
    <iconUrl>http://canjs.com/images/canjs_logo_yellow_small.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>CanJS is a MIT-licensed, client-side, JavaScript framework that makes building rich web applications easy. Use it because it’s: Smaller, Faster, Safer, Easier, Library-er.

CanJS’s core supports jQuery, Zepto, Dojo, YUI and Mootools.</description>
    <summary>CanJS is a MIT-licensed, client-side, JavaScript framework that supports MVC, Live Binding, Routing and Modular Development</summary>
    <releaseNotes>2.0.2 ( Nov 14 2013 )

◾change: cloning setter comptues
◾change: Event listeners leak in 2.0.1
◾change: can.VERSION for 2.0.1 says @EDGE rather than 2.0.1
◾change: 'key' property breaks mustache helpers
◾change: component does not respect can.compute passed via attributes
◾change: Wrapping can.compute in can.Map breaks live-binding

2.0.1 ( Nov 12 2013 )
◾change: Fixes #538 helpers aren't called is data passed to the template happens ...
◾change: Update included plugins and release tasks
◾change: mustache: 'with' string is interpreted as with helper keyword
◾change: can.Component two way binding issues
◾change: New lines are not handled properly in special attributes
◾change: can.Control: {document} events are not working
◾change: "{document} body click" breaks in latest
◾change: pushstate() and preventDefault() were not working on default route becau...
◾change: Make $#domManip patch jq2.0-compatible
◾change: broken livebinding after replace can.Map property or remove property
◾change: fixes a problem with each not working if the whole list is replaced
◾change: can.Map stack exceeded on circular data structures
◾change: Fixes #512 #513, sees the glorious return of can.camelize and his trusty sidekick, can.hyphenate
◾change: List.join is not compute-able
◾change: Fix to multiple tags not necessarily having the right context. Close #515
◾change: avoids jQuery's event system when binding on observes which fixes #280
◾change: Implement can.Mustache.safeString
◾change: can.Component helpers context issue
◾change: can.camelize
◾change: can.Component template attributes name case
◾change: Makes attribute arguments passed to a component two way binding
◾change: Fix Model.List.prototype.findAll() in IE8.
◾change: Return a new can.compute every time (new can.view.Scope()).compute() is called
◾change: Mustache and EJS issues with attributes and truthy blocks
◾change: Handlebars {{#if}} losing scope of var
◾change: can.Model.List() updates its length after destoy() of one of its models only if it has bindings
◾change: can.Mustache doesn't support SafeString
◾change: can.Mustache: inconsistent behavior when updating nested attributes of an Observe
◾change: Support Handlebars @key and @index directives
◾change: Accessing a parent array property from within mustche
◾change: can.Observe binds for nested object. First time event trigger is only on top level object instead of nested one.

2.0.0 ( Oct 17 2013 )
THERE ARE BREAKING CHANGES
A MIGRATION GUIDE IS AT: http://canjs.com/guides/migrating.html

change: Replacing lists live-binding
change: Fix destroy params
change: Special attribute binding
change: Fix Mustache binding lists in helpers
change: Certain HTML attributes need special live-binding
change: Destroy templates and attributes.
change: Fix some typo's in the documentation.
change: attr() not working in some cases in IE9
change: docs update: can.Object dependency for can.fixture
change: View renderer functions don't work with Deferreds
change: Issue: can.view.ejs(str) and can.view.ejs(id, str) return different responses
change: can.Mustache: #if sections are rendered twice when activated from live-binding
change: can.route.ready should not be called automatically
change: fixed issue #470 can.route default values are not working
change: can.route.ready called multiple times
change: Mustache two way helpers don't work as documented
change: Can't 2-way bind Array
change: Bower component does not work with steal
change: Live Binding Broken with Models with Nested Sub-models
change: String parameter not working as expected for: jQuery.fn.control / jQuery.fn.controls
change: error passing can.Observe.List to custom Mustache element helper
change: Wrong variable name in the Guide.
change: Model.destroy request params
change: Fixing can.ajax missing test for error handler with mootools
change: Fixing error that occurs when an item in an Observe.List contains a comp...
change: Observe#on
change: Array is skipped on serialize
change: can.Mustache live-binding on can.route attributes
change: create can.Component for custom tags
change: Feature/route to string
change: Default can.route.ready to false
change: Attributes automatic conversion to Map/Model specified type
change: can.route.pushstate mishandles hash fragments
change: Needed host check for pushstate.js
change: Support for rendering document fragments (returned from the renderer function) in the templates
change: Model.save: handle response data or return data in save callback
change: AMD Consistency
change: Extensionless views fail
change: can.Model.findAll promotes usage of XSS attack vector
change: Allow context change after element has been rendered
change: Make it easier to setup 2-way-binding and other interesting behaviors
change: Accessing attributes in Model destroy
change: mustache: support for backtrack path
change: Live-bound dynamic attributes don't get updated properly if they don't exist on initial execution
change: The can.Model.models arrayName should be configurable like observable's 'id' property
change: can.observe.delegate fails on compound selectors with wildcards

1.1.8 ( Sep 24 2013 )
change: can.Observe.List.Sort: fix for case when comparator is not a function 
change: makeFindOne example cache error: http://canjs.com/docs/can.Model.makeFindOne.html 
change: Two return statements in Mustache.getHelper 
change: recommended syntax breaks can.route 
change: Prevent infinite recursion on unbindAndTeardown when Observe's _bindings is undefined and Observe is self-referential 
change: Catch only exceptions thrown by modelfunc (fix #454 and re #384)
change: CanJS Swallowing Errors 

1.1.7 ( Jul 23 2013 )
change: Mustache doesn't read computed List.length correctly 
change: Removing the semi-colon splitter in EJS transform, too unreliable #242 
change: EJS transforming wasn't processing semi-colons properly within parentheses #242 
change: Adds support for EJS shared blocks #242 
change: . in helpers 
change: 1.1.6pre - something going wrong with can.computes() in Mustache templates 
change: can.route references delegate but does not include it 
change: Binding to an Observe.compute value is broken 
change: Added validatesNumericalityOf to validations 
change: Include can.Object in CanJS distribution 
change: can.Observe makes can.Deferred into an observable 
change: Update sub to not break when str is undefined 
change: List memory leak fix 
change: Integrated incremental live lists 
change: can.view.render update is sometimes undefined 
change: Model.store and live bind does not handle same object initialized more times 
change: Prevent errors if destroy is called multiple times on a Control instance 
change: Outputting attribute and value containing '=' truncates the value (EJS &amp; Mustache) 
change: can.sub fix remove param. Allow only to remove properties + tests 
change: Can.string getNext function fix 
change: Maximum Call Stack Exceeded When Destroying a nested model 
change: Add VERSION property to CanJS Object 
change: Better handling of null values in Mustache sections. 
change: model override should work for create and update not just findone and findall 
change: Download builder should include build version in output 
change: Don't treat links to "#" as "/" 
change: Run all tests also on pluginified files 
change: Observable list's length attribute does not update with live binding using dot separated accessors 
change: Twitter Bower component of CanJS 
change: ejs files loose variables after $.each loop 

1.1.6.1 (June 5 2013)
NuGet Package:
Added Missing proxy.js
Fixed logo 

1.1.6 (May 29 2013)
NuGet Package:
Changed logo to match github
Removed jQuery as a dependency since its really not.

Library:

change: Mustache doesn't read computed List.length correctly
change: Removing the semi-colon splitter in EJS transform, too unreliable #242
change: EJS transforming wasn't processing semi-colons properly within parentheses #242
change: Adds support for EJS shared blocks #242
change: . in helpers
change: 1.1.6pre - something going wrong with can.computes() in Mustache templates
change: can.route references delegate but does not include it
change: Binding to an Observe.compute value is broken
change: Added validatesNumericalityOf to validations
change: Include can.Object in CanJS distribution
change: can.Observe makes can.Deferred into an observable
change: Update sub to not break when str is undefined
change: List memory leak fix
change: Integrated incremental live lists
change: can.view.render update is sometimes undefined
change: Model.store and live bind does not handle same object initialized more times
change: Prevent errors if destroy is called multiple times on a Control instance
change: Outputting attribute and value containing '=' truncates the value (EJS &amp; Mustache)
change: can.sub fix remove param. Allow only to remove properties + tests
change: Can.string getNext function fix
change: Maximum Call Stack Exceeded When Destroying a nested model
change: Add VERSION property to CanJS Object
change: Better handling of null values in Mustache sections.
change: model override should work for create and update not just findone and findall
change: Download builder should include build version in output
change: Don't treat links to "#" as "/"
change: Run all tests also on pluginified files
change: Observable list's length attribute does not update with live binding using dot separated accessors
change: Twitter Bower component of CanJS
change: ejs files loose variables after $.each loop</releaseNotes>
    <copyright>Copyright (C) 2012 Bitovi</copyright>
    <language>en-US</language>
    <tags>canjs javascript mvc jquery dojo yui zepto mootools</tags>
  </metadata>
</package>